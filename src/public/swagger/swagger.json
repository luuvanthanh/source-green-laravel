{
    "swagger": "2.0",
    "info": {
        "title": "Green VMS API",
        "description": "",
        "version": "1.0.0"
    },
    "host": "localhost:11000",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/api",
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "Operations about Authentication"
        },
        {
            "name": "User",
            "description": "Operations about User"
        },
        {
            "name": "Camera",
            "description": "Operations about Camera"
        },
        {
            "name": "Camera_Server",
            "description": "Operations about Camera Server"
        },
        {
            "name": "Collection",
            "description": "Operations about Collection"
        }
    ],
    "paths": {
        "/oauth/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Login",
                "operationId": "AuthLogin",
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUserLoginRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/TokenPassport"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorPassport"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "AuthLogout",
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/session": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User profile",
                "description": "Get information of current user",
                "operationId": "MeProfile",
                "parameters": [
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get profile Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/password/forgot/request": {
            "post": {
                "summary": "Send request forgot password",
                "description": "",
                "operationId": "PasswordForgotRequest",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPasswordForgotRequestRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/password/forgot/reset": {
            "post": {
                "summary": "Reset password",
                "description": "",
                "operationId": "PasswordForgotReset",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPasswordForgotResetRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/password/change": {
            "post": {
                "summary": "Change password",
                "description": "",
                "operationId": "PasswordChange",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPasswordChangeRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List Users",
                "description": "Get list users",
                "operationId": "UserList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create User",
                "description": "",
                "operationId": "UserCreate",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateUserRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User profile",
                "description": "Get information of a specified user. Include accept: roles, collection, permissionSystem",
                "operationId": "UserDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get profile Success",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update User",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdateUserRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete User",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/cameras/browse": {
            "get": {
                "tags": [
                    "Camera"
                ],
                "summary": "List Cameras",
                "description": "Get list cameras",
                "operationId": "CameraList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Cameras"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/cameras": {
            "get": {
                "tags": [
                    "Camera"
                ],
                "summary": "List Cameras",
                "description": "Get list cameras",
                "operationId": "CameraList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Cameras"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Camera",
                "description": "",
                "operationId": "CameraCreate",
                "tags": [
                    "Camera"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateCameraRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/cameras/{id}": {
            "get": {
                "tags": [
                    "Camera"
                ],
                "summary": "Camera profile",
                "description": "Get information of a specified camera",
                "operationId": "CameraDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Camera Success",
                        "schema": {
                            "$ref": "#/definitions/Cameras"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Camera",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "Camera"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdateCameraRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete Camera",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Camera"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/camera-servers": {
            "get": {
                "tags": [
                    "Camera_Server"
                ],
                "summary": "List Camera Server",
                "description": "Get list Camera Server",
                "operationId": "CameraServerList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/CameraServer"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Camera Server",
                "description": "",
                "operationId": "CameraServerCreate",
                "tags": [
                    "Camera_Server"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateCameraServerRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "cameras/{id}/playback": {
            "post": {
                "summary": "Play back Camera",
                "description": "",
                "operationId": "Play_Back",
                "tags": [
                    "Camera"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPlayBackCameraRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PlayBackCameras"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
        },
        "cameras/{id}/export": {
            "post": {
                "summary": "Export Camera",
                "description": "",
                "operationId": "Export",
                "tags": [
                    "Camera"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadPlayBackCameraRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PlayBackCameras"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
        },
        "/video-walls": {
            "get": {
                "tags": [
                    "Video_Wall"
                ],
                "summary": "List Video Wall",
                "description": "Get list Video Wall",
                "operationId": "VideoWallList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/CameraServer"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Video Wall",
                "description": "",
                "operationId": "VideoWallCreate",
                "tags": [
                    "Video_Wall"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateVideoWallRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/VideoWalls"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/video-walls/{id}": {
            "get": {
                "tags": [
                    "Video_Wall"
                ],
                "summary": "Video Wall profile",
                "description": "Get information of a specified Video wall",
                "operationId": "VideoWallDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Video wall Success",
                        "schema": {
                            "$ref": "#/definitions/VideoWalls"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Video wall",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "Video_Wall"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdateVideoWallRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/VideoWalls"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete VideoWall",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Video_Wall"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/collections": {
            "get": {
                "tags": [
                    "Collection"
                ],
                "summary": "List Collections",
                "description": "Get list Collections",
                "operationId": "CollectionList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Collections"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Collection",
                "description": "",
                "operationId": "CollectionCreate",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateCollectionRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/collections/{id}": {
            "get": {
                "tags": [
                    "Collection"
                ],
                "summary": "Collection profile",
                "description": "Get information of a specified Collection",
                "operationId": "CollectionDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Collection Success",
                        "schema": {
                            "$ref": "#/definitions/Collections"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "patch": {
                "summary": "Update Collection",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdateCollectionRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete Collection",
                "description": "",
                "operationId": "Delete",
                "tags": [
                    "Collection"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/users/me": {
            "put": {
                "summary": "Update profile user",
                "description": "",
                "operationId": "UpdateProfileUser",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdateProfileUserRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/user-collections": {
            "post": {
                "summary": "Add users to collection",
                "description": "",
                "operationId": "AddUserCollection",
                "tags": [
                    "UserCollection"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadAddUserCollectionRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "put": {
                "summary": "Update role user to collection",
                "description": "",
                "operationId": "UpdateUserCollection",
                "tags": [
                    "UserCollection"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdateUserCollectionRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete user to collection",
                "description": "",
                "operationId": "DeleteUserCollection",
                "tags": [
                    "UserCollection"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadDeleteUserCollectionRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "List Role",
                "description": "Get list role",
                "operationId": "RoleList",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/page"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "$ref": "#/parameters/searchFields"
                    },
                    {
                        "$ref": "#/parameters/filter"
                    },
                    {
                        "$ref": "#/parameters/orderBy"
                    },
                    {
                        "$ref": "#/parameters/sortedBy"
                    },
                    {
                        "$ref": "#/parameters/include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "summary": "Create Role",
                "description": "",
                "operationId": "RoleCreate",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateRoleRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/roles/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Role profile",
                "description": "Get information of a specified role",
                "operationId": "RoleDetail",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Role Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "put": {
                "summary": "Update Role",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadCreateRoleRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "permissions-for-role": {
            "put": {
                "summary": "Update Permission For Role",
                "description": "",
                "operationId": "Update",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayloadUpdatePermissionForRoleRaw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "400": {
                        "description": "Error Validation",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Error Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "DefaultResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "detail": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "ErrorValidation": {
            "type": "object"
        },
        "ErrorPassport": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "integer"
                },
                "hint": {
                    "type": "string"
                }
            }
        },
        "TokenPassport": {
            "type": "object",
            "properties": {
                "token_type": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "TokenResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "access_token": {
                            "type": "string"
                        },
                        "token_type": {
                            "type": "string"
                        },
                        "expires_in": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "PayloadLoginRaw": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "array"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "PayloadCreateRoleRaw": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "PayloadUpdatePermissionForRoleRaw": {
            "type": "object",
            "required": [],
            "properties": {
                "data_new": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "permission_id": {
                                "type": "integer"
                            },
                            "role_id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "data_delete": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "permission_id": {
                                "type": "integer"
                            },
                            "role_id": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "PayloadCreateUserRaw": {
            "type": "object",
            "required": [
                "fullname",
                "email",
                "phone"
            ],
            "properties": {
                "fullname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "PayloadUpdateProfileUserRaw": {
            "type": "object",
            "required": [
                "fullname",
                "email",
                "phone",
                "password",
                "old_password",
                "password_confirmation",
                "avatar"
            ],
            "properties": {
                "fullname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "password_confirmation": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string",
                    "format": "binary"
                }
            }
        },
        "PayloadUserLoginRaw": {
            "type": "object",
            "required": [
                "username",
                "password",
                "grant_type",
                "client_id",
                "client_secret"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "grant_type": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                }
            }
        },
        "PayloadUserSigninRaw": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "PayloadPasswordForgotRequestRaw": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "PayloadAddUserCollectionRaw": {
            "type": "object",
            "required": [
                "users",
                "collection_id"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "user_id": {
                                "type": "integer"
                            },
                            "role_id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "collection_id": {
                    "type": "integer"
                }
            }
        },
        "PayloadUpdateUserCollectionRaw": {
            "type": "object",
            "required": [
                "role_id",
                "users_id",
                "collection_id"
            ],
            "properties": {
                "role_id": {
                    "type": "integer"
                },
                "users_id": {
                    "type": "integer"
                },
                "collection_id": {
                    "type": "integer"
                }
            }
        },
        "PayloadDeleteUserCollectionRaw": {
            "type": "object",
            "required": [
                "users_delete",
                "collection_id"
            ],
            "properties": {
                "users_delete": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "collection_id": {
                    "type": "integer"
                }
            }
        },
        "PayloadPasswordForgotResetRaw": {
            "type": "object",
            "required": [
                "email",
                "token",
                "password",
                "password_confirmation"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_confirmation": {
                    "type": "string"
                }
            }
        },
        "PayloadPasswordChangeRaw": {
            "type": "object",
            "required": [
                "current_password",
                "password",
                "password_confirmation"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_confirmation": {
                    "type": "string"
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/UserAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/RoleAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "Cameras": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/CameraAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "PlayBackCameras": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "camera_id": {
                                "type": "string"
                            },
                            "server_id": {
                                "type": "string"
                            },
                            "start_time": {
                                "type": "string"
                            },
                            "end_time": {
                                "type": "string"
                            },
                            "video_url": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "CameraServer": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/CameraServerAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "VideoWalls": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/VideoWallAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "Collections": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "attributes": {
                                "$ref": "#/definitions/CollectionAttributesRaw"
                            }
                        }
                    }
                }
            }
        },
        "PayloadCreateCameraRaw": {
            "type": "object",
            "required": [
                "address",
                "address_detail",
                "lat",
                "long",
                "collection_id",
                "camera_server_id",
                "general",
                "video",
                "network"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "address_detail": {
                    "type": "string"
                },
                "lat": {
                    "type": "string"
                },
                "long": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "array",
                    "items":{}
                },
                "camera_server_id": {
                    "type": "integer"
                },
                "general": {
                    "type": "object",
                    "properties": {
                        "device_model": {
                            "type": "string"
                        },
                        "serial_number": {
                            "type": "integer"
                        },
                        "firmware_ver": {
                            "type": "integer"
                        },
                        "device_name": {
                            "type": "string"
                        },
                        "ip": {
                            "type": "string"
                        },
                        "user_name": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        }
                    }
                },
                "video": {
                    "type": "object",
                    "properties": {
                        "rtsp_url": {
                            "type": "string"
                        },
                        "resolution": {
                            "type": "string"
                        },
                        "video_encoding": {
                            "type": "string"
                        },
                        "frame_rate": {
                            "type": "string"
                        },
                        "bit_rate": {
                            "type": "string"
                        },
                        "recording_enabled": {
                            "type": "integer"
                        },
                        "streaming_enabled": {
                            "type": "integer"
                        }
                    }
                },
                "network": {
                    "type": "object",
                    "properties": {
                        "ipv4_addr": {
                            "type": "string"
                        },
                        "ipv4_subnetmask": {
                            "type": "string"
                        },
                        "ipv4_gateway": {
                            "type": "string"
                        },
                        "ipv6_addr": {
                            "type": "string"
                        },
                        "ipv6_subnetmask": {
                            "type": "string"
                        },
                        "ipv6_gateway": {
                            "type": "string"
                        },
                        "dns_server_primary": {
                            "type": "string"
                        },
                        "dns_server_secondary": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "PayloadUpdateCameraRaw": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "address_detail": {
                    "type": "string"
                },
                "lat": {
                    "type": "string"
                },
                "long": {
                    "type": "string"
                },
                "collection_id": {
                    "type": "array",
                    "items":{}
                },
                "camera_server_id": {
                    "type": "integer"
                },
                "general": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "device_model": {
                                "type": "string"
                            },
                            "serial_number": {
                                "type": "integer"
                            },
                            "firmware_ver": {
                                "type": "integer"
                            },
                            "device_name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "video": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "rtsp_url": {
                                "type": "string"
                            },
                            "resolution": {
                                "type": "string"
                            },
                            "video_encoding": {
                                "type": "string"
                            },
                            "frame_rate": {
                                "type": "string"
                            },
                            "bit_rate": {
                                "type": "string"
                            },
                            "recording_enabled": {
                                "type": "integer"
                            },
                            "streaming_enabled": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "network": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "ipv4_addr": {
                                "type": "string"
                            },
                            "ipv4_subnetmask": {
                                "type": "string"
                            },
                            "ipv4_gateway": {
                                "type": "string"
                            },
                            "ipv6_addr": {
                                "type": "string"
                            },
                            "ipv6_subnetmask": {
                                "type": "string"
                            },
                            "ipv6_gateway": {
                                "type": "string"
                            },
                            "dns_server_primary": {
                                "type": "string"
                            },
                            "dns_server_secondary": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "PayloadCreateCameraServerRaw": {
            "type": "object",
            "required": [
                "uuid"
            ],
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "nas_folder": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "PayloadPlayBackCameraRaw": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                }
            }
        },
        "PayloadCreateVideoWallRaw": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "display_type": {
                    "type": "string"
                }
            }
        },
        "PayloadUpdateVideoWallRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "display_type": {
                    "type": "integer"
                },
                "cameras": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "PayloadUpdateCollectionRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "cameras": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string"
                            }
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "permission": {
                                "type": "array",
                                "items": {}
                            }
                        }
                    }
                }
            }
        },
        "PayloadCreateCollectionRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "PayloadUpdateUserRaw": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "UserAttributesRaw": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "RoleAttributesRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "CameraAttributesRaw": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "status_label": {
                    "type": "string"
                }
            }
        },
        "CameraServerAttributesRaw": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                },
                "nas_folder": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },

                "user_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "VideoWallAttributesRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "display_type": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CollectionAttributesRaw": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "user_id": {
            "name": "user_id",
            "description": "User ID",
            "in": "query",
            "required": true,
            "type": "integer"
        },
        "id": {
            "name": "id",
            "description": "ID",
            "in": "path",
            "required": true,
            "type": "integer"
        },
        "limit": {
            "name": "limit",
            "description": "Amount of item in per page.\nUse limit = 0 in order to get all items.",
            "in": "query",
            "required": false,
            "type": "integer",
            "example": 15
        },
        "page": {
            "name": "page",
            "description": "Page",
            "in": "query",
            "required": false,
            "type": "integer",
            "example": 1
        },
        "search": {
            "name": "search",
            "description": "Searched value.\nExample: 'lorem', 'name:John;email:john@gmail.com'",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "searchFields": {
            "name": "searchFields",
            "description": "Fields in which research should be carried out\nExample: 'name;email', 'name:like;email:='",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "filter": {
            "name": "filter",
            "description": "Fields that must be returned to the response object\nExample: id;name",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "orderBy": {
            "name": "orderBy",
            "description": "Order By\nExample: id, duration, created_at",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "orderByRaw": {
            "name": "orderByRaw",
            "description": "Order By Raw\nExample: skip",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "sortedBy": {
            "name": "sortedBy",
            "description": "Sort type\nExample: asc or desc",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ]
        },
        "with": {
            "name": "with",
            "description": "Add relationship\nExample: roles",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "include": {
            "name": "include",
            "description": "Include relationship.",
            "in": "query",
            "required": false,
            "type": "string"
        },
        "searchJoin": {
            "name": "searchJoin",
            "description": "Specifies the search method (AND / OR), by default the application searches each parameter with OR.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
                "or",
                "and"
            ]
        },
        "idLast": {
            "name": "id_last",
            "description": "Specifies the last id in previous request",
            "in": "query",
            "required": false,
            "type": "integer"
        },
        "typeEducations": {
            "name": "type",
            "description": "Specifies the type CHUNG_CHI_CHUYEN_NGHANH, TRINH_DO_CHUYEN_MON",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
                "CHUNG_CHI_CHUYEN_NGHANH",
                "TRINH_DO_CHUYEN_MON"
            ]
        },
        "start_date": {
            "name": "start_date",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
        },
        "end_date": {
            "name": "end_date",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
        },
        "store_id": {
            "name": "store_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter your token..."
        }
    }
}
